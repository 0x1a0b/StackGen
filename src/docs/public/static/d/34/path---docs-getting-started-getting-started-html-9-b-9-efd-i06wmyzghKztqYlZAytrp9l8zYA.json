{"data":{"mdx":{"excerpt":"Introduction StackGen can be used either as a Java command-line program, or as a library called from your own Java code. The primary meansâ€¦","timeToRead":4,"frontmatter":{"title":"Getting Started","needsAuth":false},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Introduction`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `StackGen can be used either as a Java command-line program, or as a library called from your own Java code.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The primary means of controlling the output of the program is via command line arguments.`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"java -jar StarterStackGen-1.0.0.jar -DSWAGGER_LANG=spring -DSWAGGER_LIB=resteasy ...\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `These settings are converted to System properties within the StackGen program and are used to configure the output from the program.`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"java\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-java\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-java\"\n  }, React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// main output type\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// (ie: spring, jersey2)\"), \"\\n\", \"configurator\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"setLang\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"SWAGGER_LANG\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// the JSON serialization library to use\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// (ie: jersey2, resteasy, resttemplate)\"), \"\\n\", \"configurator\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"setLibrary\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"SWAGGER_LIB\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))))), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Step 0: Download and Install StackGen Dev Prerequisites`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Java8+ JDK Installed\n`, `[Linux]`, ` (TODO LINUX) | `, `[OSX]`, ` (TODO OSX) | `, `[Windows]`, ` (TODO WIN)`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Apache Maven Installed\n`, `[Linux]`, ` (TODO LINUX) | `, `[Windows]`, ` (TODO WIN)\nINSTALL Maven (for building latest and running Spring boot)`))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Linux:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"sudo apt-get Maven\")))), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Install git`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Linux:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"sudo apt-get git\")))), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Clone StackGen github project`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Linus/OSX:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"git clone https://github.com/StarterInc/StackGen.git\")))), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Install Node and NPM\n`, `[Linux]`, ` (TODO LINUX) | `, `[OSX]`, ` (TODO OSX) | `, `[Windows]`, ` (TODO WIN)`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `OSX (Homebrew install prerequisite):`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"ruby -e \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\\\"\", \"\\n\", \"brew install node\")))), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `(optional) Install IDE(s)`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `(optional) Install MySQL Workbench\n`, `[Linux]`, ` (TODO LINUX) | `, `[OSX]`, ` (TODO OSX) | `, `[Windows]`, ` (TODO WIN)`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `(optional) Create LightSail AWS Development Server\n`, `[Linux]`, ` (TODO LINUX) | `, `[OSX]`, ` (TODO OSX) | `, `[Windows]`, ` (TODO WIN)`))), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `NOTE: Currently StackGen supports generation of MySQL database schemas.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Roadmap`), ` Support for PostgreSQL, Oracle, and noSQL databases TBD`), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Development Best Practices`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Fork the StackGen project and leverage github with Conventional Commits  `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://conventionalcommits.org/\"\n    }\n  }, `Conventional Commits`))), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Only connect to database server via https.`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `To improve DB security, disallow WAN connections to the Database via GRANT permissions, then use an SSH tunnel to connect to the database for local testing.`))), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `TODO: document DB tunneling over SSH`)), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Use `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"securefield\"\n    }\n  }, `SecureField`, `â„¢`), ` configuration for any PII (Personal Identifying Information) data to protect user privacy.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Keep in mind SecureField`, `â„¢`, `s cannot be used in searches, so consider adding appropriate keyword-based search fields.`), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `StackGen Code Generation Steps:`), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Swagger Schema -> Java POJOs`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Java POJOs -> SQL Database Tables`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `SQL Database -> ORM Mapping Data Objects (MyBatis)`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `ORM Mapping Data Objects Wrapped by StackGen Model Objects`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Use StackGen Model Objects in your Java code (optional)`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Start Spring Boot microservice and access Model Objects via REST apis  (optional)`)), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Step 1: Create an Swagger Schema for your Application`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Generating a StackGen application requires that you provide/create an\nOpenAPI schema that defines the application's objects, RESTful APIs and the schema\nfor your SQL database.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://openapi.org/\"\n    }\n  }, `Learn about OpenAPI`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Inputting your Swagger schema to StackGen will result in the creation of a\nJava Maven application residing in the generator output folder (\"./gen\" by default).`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"strong\",\n    props: {\n      \"href\": \"https://maven.apache.org\"\n    }\n  }, `Apache Maven`)), ` is a popular open source Java build tool which manages dependencies, builds the appliction, and allows for\nrunning Java programs with test and service automation.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"strong\",\n    props: {\n      \"href\": \"http://blog.mybatis.org\"\n    }\n  }, `MyBatis ORM`)), ` is a popular open source Java Object Relational Mapping library which allows you to define simple and complex Data Objects that map to your SQL database (in this case MySQL).  Using MyBatis, you can easily insert, update, delete and search for data in your Database using convenient Java Data Objects. If you are new to MyBatis, you should check out this `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://zetcode.com/db/mybatis/\"\n    }\n  }, `Excellent Tutorial`), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Before running StackGen on your Swagger spec, you will need to create a Database (MySQL) and a default schema.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `We recommend the use of an AWS LightSail Database instance to run the database and using MySQL Workbench free database management utility to work with the data.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Additionally, you may consider connecting over an SSH tunnel but for now that is left out of the scope of this Tutorial.`), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Step 2: Build and Launch your Generated Application`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `After generating your application, you can treat the output as you would any standard\nMaven Java application.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `One of the benefits of using Maven is the dependence on standardized file paths\nand project defaults, so the layout of the project files should be familiar to anyone\nwho has worked with Maven in the past.`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"gen\", \"\\n\", \"\\u251C\\u2500\\u2500 src\", \"\\n\", \"\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u251C\\u2500\\u2500 java\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 io\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u251C\\u2500\\u2500 starter\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 ignite\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u251C\\u2500\\u2500 api\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u251C\\u2500\\u2500 invoker\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2514\\u2500\\u2500 model\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"         \", \"\\u2514\\u2500\\u2500 dao <-- THIS IS WHERE THE Data Object Classes Reside\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2514\\u2500\\u2500 swagger\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2502\\xA0\\xA0\", \"         \", \"\\u2514\\u2500\\u2500 configuration\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"     \", \"\\u2514\\u2500\\u2500 resources\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"         \", \"\\u2514\\u2500\\u2500 io\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"             \", \"\\u2514\\u2500\\u2500 starter\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"                 \", \"\\u2514\\u2500\\u2500 ignite\", \"\\n\", \"\\u2502\\xA0\\xA0\", \"                     \", \"\\u2514\\u2500\\u2500 sqlmaps <-- Generated MyBatis ORM Mappings\", \"\\n\", \"\\u2514\\u2500\\u2500 target <-- Maven Build Output\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `To build the project after generation, use the following commands from the command line:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"mvn clean install -U\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you have selected the \"spring-boot\" (default) application framework, you can run\nthe service with a single line of code:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"cd <project_folder>gen\", \"\\n\", \"mvn spring-boot:run\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `To distribute the spring boot service, you can simply copy the deployment jar from the \"target\" folder to your server and launch it directly as an executable jar:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"testbed$ java -jar -Dio.starter.ignite.secure_key=W43sdfNpOSDF0madfT40wwjTaaadfaeQo449Qa9rygfrm5fX21Dg= -DRDS_HOSTNAME=db.yourco.com -DRDS_DB_NAME=ignite -DRDS_USERNAME=igniteuser -DRDS_PASSWORD=**********\", \"  \", \"ignite-1.0.1-exec.jar\", \"\\n\", \"\\n\", \"  \", \".\", \"   \", \"____\", \"          \", \"_\", \"            \", \"__ _ _\", \"\\n\", \" /\\\\\\\\ / ___'_ __ _ _(_)_ __\", \"  \", \"__ _ \\\\ \\\\ \\\\ \\\\\", \"\\n\", \"( ( )\\\\___ | '_ | '_| | '_ \\\\/ _` | \\\\ \\\\ \\\\ \\\\\", \"\\n\", \" \\\\\\\\/\", \"  \", \"___)| |_)| | | | | || (_| |\", \"  \", \") ) ) )\", \"\\n\", \"  \", \"'\", \"  \", \"|____| .__|_| |_|_| |_\\\\__, | / / / /\", \"\\n\", \" =========|_|==============|___/=/_/_/_/\", \"\\n\", \" :: Spring Boot ::\", \"        \", \"(v1.5.9.RELEASE)\", \"\\n\", \"\\n\", \"Dec 22, 2018 12:43:47 PM io.starter.ignite.invoker.Swagger2SpringBoot logStarting\", \"\\n\", \"INFO: Starting Swagger2SpringBoot v1.0.1 on Johns-MacBook.local with PID 22593 (/Users/john/workspace2019/testbed/ignite-1.0.1-exec.jar started by john in /Users/john/workspace2019/testbed)\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `You should see the StackGen banner and assuming the application starts correctly,\nyou will see output similar to the following on the console:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"[main] INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references\", \"\\n\", \"Dec 07, 2018 10:38:18 AM org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer start\", \"\\n\", \"INFO: Tomcat started on port(s): 8080 (http)\", \"\\n\", \"Dec 07, 2018 10:38:18 AM io.starter.ignite.invoker.Swagger2SpringBoot logStarted\", \"\\n\", \"INFO: Started Swagger2SpringBoot in 20.395 seconds (JVM running for 38.247)\")))), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Step 3: Access the Running Application`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Once launched, your new StackGen application is ready to serve JSON data from then\nRESTful endpoints that were defined in the OpenAPI schema.`), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Open a browser: `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"http://localhost:8080\"\n    }\n  }, `http://localhost:8080`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Verify that the RESTful endpoints match your expectations from the input file`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `If there are problems with your REST api, you can easily fix the OpenAPI schema\nand then re-run the StackGen generation script.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Now is the time to correct any obvious errors in the Schema as it will speed up further\ndevelopment the more complete and correct your underlying application is.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you have set the option to overwrite the Database tables if they already exist,\nthen any data you have entered in the database will be saved off in the renamed\noriginal table.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Encrypted data can only be recovered from SecureFields`, `â„¢`, ` columns if the SecureFields\nsetting is enabled on the field in the OpenAPI schema.`), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components,\n    props: {\n      \"start\": 4\n    }\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `As you can see the application data can be accessed from the REST api, however\nStackGen also generates a jar file which is usable as a dependency in your\nprojects without running the Spring Boot RESTful service.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `So you can use your generated Java objects from within your application directly,\nthrough a RESTful api/service or both, depending upon your application architecture.`), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components,\n    props: {\n      \"start\": 5\n    }\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `TODO: enable monitoring`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `TODO: describe app testing`)), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Configuration Variables`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"undefined\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"ADD_GEN_CLASS_NAME= \\\"Service\\\"\", \"\\n\", \"ALTER_TABLE= \\\"ALTER TABLE\\\"\", \"\\n\", \"ANON_USERID= null\", \"\\n\", \"API_CLASSES= \\\"/projects/StarterStackGen/gen/src/main/java/io/starter/ignite/api/\\\"\", \"\\n\", \"API_PACKAGE= \\\"io.starter.ignite.api\\\" (id=22)\", \"\\n\", \"API_PACKAGE_DIR= \\\"/io/starter/ignite/api/\\\" (id=23)\", \"\\n\", \"ARTIFACT_ID= \\\"ignite\\\" (id=27)\", \"\\n\", \"ARTIFACT_VERSION= \\\"1.0.1\\\" (id=28)\", \"\\n\", \"AWS_ACCESS_KEY= null\", \"\\n\", \"AWS_SECRET_KEY= null\", \"\\n\", \"CIPHER_NAME= \\\"AES/CBC/PKCS5PADDING\\\" (id=29)\", \"\\n\", \"CONFIG_FILE= \\\"/projects/StarterStackGen/src/resources/swagger_config.json\\\" (id=30)\", \"\\n\", \"CREATE_TABLE= \\\"CREATE TABLE\\\" (id=31)\", \"\\n\", \"CREATE_TABLE_BEGIN_BLOCK= \\\"(\\\" (id=32)\", \"\\n\", \"CREATE_TABLE_END_BLOCK= \\\");\\\" (id=34)\", \"\\n\", \"DATE_FORMAT= java.text.SimpleDateFormat\", \"  \", \"(id=36)\", \"\\n\", \"DB_NAME= \\\"ignite\\\" (id=41)\", \"\\n\", \"DB_PASSWORD= \\\"xxxxxxxxxx\\\" (id=42)\", \"\\n\", \"DB_TIMEOUT= 10000\", \"\\n\", \"DB_URL= \\\"db.us-west-2.rds.amazonaws.com\\\" (id=43)\", \"\\n\", \"DB_USER= \\\"igniteuser\\\" (id=44)\", \"\\n\", \"DEBUG= false\", \"\\n\", \"DISABLE_DATA_FIELD_ASPECT= true\", \"\\n\", \"DISABLE_SECURE_FIELD_ASPECT= false\", \"\\n\", \"DROP_EXISTING_TABLES= true\", \"\\n\", \"DROP_TABLE= \\\"DROP TABLE\\\" (id=45)\", \"\\n\", \"FOLDER_SKIP_LIST= java.util.ArrayList<E>\", \"  \", \"(id=46)\", \"\\n\", \"IGNITE_API_PACKAGE= \\\"io.starter.ignite.api\\\" (id=22)\", \"\\n\", \"IGNITE_DATAMODEL_PACKAGE= \\\"io.starter.ignite.model.dao\\\" (id=54)\", \"\\n\", \"IGNITE_GEN_MODEL_CRUD_OPS= \\\"igniteGenerateCRUDOps\\\" (id=55)\", \"\\n\", \"IGNITE_GEN_MODEL_ENHANCEMENTS= \\\"igniteGenerateModelEnhancements\\\" (id=56)\", \"\\n\", \"IGNITE_MAJOR_VERSION= 1\", \"\\n\", \"IGNITE_MINOR_VERSION= 1\", \"\\n\", \"INVOKER_PACKAGE= \\\"io.starter.ignite.invoker\\\" (id=57)\", \"\\n\", \"JAVA_GEN_ARCHIVE_FOLDER= \\\"/archive/gen\\\" (id=58)\", \"\\n\", \"JAVA_GEN_ARCHIVE_PATH= \\\"/projects/StarterStackGen/archive/gen\\\" (id=59)\", \"\\n\", \"JAVA_GEN_FOLDER= \\\"/gen\\\" (id=60)\", \"\\n\", \"JAVA_GEN_PATH= \\\"/projects/StarterStackGen/gen\\\" (id=61)\", \"\\n\", \"JAVA_GEN_RESOURCES_FOLDER= \\\"/projects/StarterStackGen/gen/src/main/resources\\\" (id=62)\", \"\\n\", \"JAVA_GEN_SRC= java.io.File\", \"  \", \"(id=63)\", \"\\n\", \"JAVA_GEN_SRC_FOLDER= \\\"/projects/StarterStackGen/gen/src/main/java\\\" (id=65)\", \"\\n\", \"JNDI_DB_LOOKUP_STRING= \\\"jndi/ignite\\\" (id=66)\", \"\\n\", \"KEY_SIZE= 256\", \"\\n\", \"KEYGEN_INSTANCE_NAME= \\\"AES\\\" (id=67)\", \"\\n\", \"logger= org.slf4j.impl.SimpleLogger\", \"  \", \"(id=68)\", \"\\n\", \"LONG_DATE_FORMAT= \\\"MMM/d/yyyy HH:mm:ss Z\\\" (id=73)\", \"\\n\", \"MODEL_CLASSES= \\\"/projects/StarterStackGen/gen/src/main/java/io/starter/ignite/model/dao/\\\" (id=74)\", \"\\n\", \"MODEL_DAO_PACKAGE_DIR= \\\"/io/starter/ignite/model/dao/\\\" (id=75)\", \"\\n\", \"MODEL_PACKAGE= \\\"io.starter.ignite.model.dao\\\" (id=54)\", \"\\n\", \"MODEL_PACKAGE_DIR= \\\"/io/starter/ignite/model/\\\" (id=76)\", \"\\n\", \"MYBATIS_CLASS_PREFIX= \\\"StackGen\\\" (id=77)\", \"\\n\", \"MYBATIS_CONFIG= \\\"/projects/StarterStackGen/src/resources/templates/MyBatisConfig.xml\\\" (id=78)\", \"\\n\", \"MYBATIS_CONFIG_OUT= \\\"/projects/StarterStackGen/gen/src/main/resources/MyBatisConfig.xml\\\" (id=79)\", \"\\n\", \"MYBATIS_GEN_CONFIG= \\\"/projects/StarterStackGen/src/resources/templates/MyBatisGeneratorConfig.xml\\\" (id=80)\", \"\\n\", \"MYBATIS_GEN_CONFIG_OUT= \\\"/projects/StarterStackGen/src/resources/MyBatisGeneratorConfig.xml\\\" (id=81)\", \"\\n\", \"MYBATIS_MODEL_CLASSES= \\\"/projects/StarterStackGen/gen/src/main/java/io/starter/ignite/model/dao/\\\" (id=74)\", \"\\n\", \"ORG_PACKAGE= \\\"io.starter.ignite\\\" (id=82)\", \"\\n\", \"OUTPUT_DIR= \\\"/projects/StarterStackGen/gen\\\" (id=61)\", \"\\n\", \"PLUGIN_FOLDER= \\\"/projects/StarterStackGen/src/resources/plugins\\\"\", \"\\n\", \"REACT_APP_NAME= \\\"MyLittlePony\\\"\", \"\\n\", \"REACT_APP_OUTPUT_FOLDER= \\\"/projects/StarterStackGen/tmp/react/\\\"\", \"\\n\", \"REACT_EXPORT_FOLDER= \\\"/projects/StarterStackGen/REACT_EXPORT\\\"\", \"\\n\", \"REACT_TEMPLATE_APP_FOLDER= \\\"/projects/StarterStackGen/src/main/react/StackGenApp/\\\"\", \"\\n\", \"REACT_TEMPLATE_FOLDER= \\\"/projects/StarterStackGen/src/main/react/template/\\\"\", \"\\n\", \"RENAME_TABLE_SUFFIX= \\\"BK_\\\"\", \"\\n\", \"ROOT_FOLDER= \\\"/projects/StarterStackGen\\\"\", \"\\n\", \"S3_STARTER_MEDIA_BUCKET= null\", \"\\n\", \"S3_STARTER_MEDIA_FOLDER= null\", \"\\n\", \"S3_STARTER_SERVICE= null\", \"\\n\", \"S3_STARTER_SYSTEM_BUCKET= null\", \"\\n\", \"SCHEMA_NAME= \\\"ignite\\\"\", \"\\n\", \"SECRET_KEY= \\\"W3ngNBCp80mgG0wwjTslfeQoG2hQa9ryqbemTEX01Wg=\\\"\", \"\\n\", \"SECURE_KEY_PROPERTY= \\\"io.starter.ignite.secure_key\\\"\", \"\\n\", \"SESSION_VAR_SQLSESSION= null\", \"\\n\", \"SESSION_VAR_USER= null\", \"\\n\", \"SETTING_COLUMNS_UPPERCASED= false\", \"\\n\", \"SKIP_LIST= java.util.ArrayList<E>\", \"\\n\", \"skipDBGen= false\", \"\\n\", \"skipMybatis= false\", \"\\n\", \"SOURCE_MAIN= \\\"/src/main\\\"\", \"\\n\", \"SOURCE_RESOURCES= \\\"/src/resources\\\"\", \"\\n\", \"SPEC_LOCATION= \\\"/projects/StarterStackGen/src/resources/openapi_specs/\\\"\", \"\\n\", \"SPRING_DELEGATE= \\\"ApiDelegate\\\"\", \"\\n\", \"SQL_MAPS_PATH= \\\"io/starter/ignite/sqlmaps/\\\"\", \"\\n\", \"SWAGGER_LANG= \\\"spring\\\"\", \"\\n\", \"SWAGGER_LIB= \\\"spring-boot\\\"\", \"\\n\", \"TABLE_NAME_PREFIX= \\\"ignite$\\\"\", \"\\n\", \"VERBOSE= false\", \"\\n\", \"WEB_JS_ROOT= \\\"/src/main/webapp/js\\\"\", \"\\n\", \"WEB_ROOT= \\\"/src/main/webapp\\\"\", \"\\n\", \"WP_PLUGIN_ROOT= \\\"/src/main/src/main/wp\\\"\")))), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Resources`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Using StackGen, you should experience a significant boost in productivity\nwhen building database applications and services.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The benefits of declaring your Object and API definitions in a human-readable\ntext file format, and regenerating as much of the \"plumbing\" code as possible\nwhen changes are made, become even more compelling as application complexity\nincreases.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Build on robust, industry-standard libraries and platforms such as Swagger CodeGen\nApache Spring, and MyBatis ORM, StackGen aims to give you a solid foundation for\nbuilding sophisticated and secure applications for any purpose.`), React.createElement(MDXTag, {\n    name: \"h5\",\n    components: components\n  }, `Coming Soon: Automator.ai`, `â„¢`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `Starter Automator.AI`), `: Looking for even more rapid development with even less coding?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Starter Automator.AI`, `â„¢`, ` is an LCDP (Low Code Development Platform) which combines\nthe power of StackGen`, `â„¢`, ` with the massive productivity of an iBPM.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Starter Automator.AI Exclusive Features:`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Graphical Modeling and Design of App Workflows`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Enhanced data security using the Starter SecureField`, `â„¢`, ` encryption plugin`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Data and API Modeling using StackGen`, `â„¢`, ` Code generation`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Business-friendly spreadsheet logic and reporting plugin`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `AI-enhanced Decisioning`)));\n});"}}},"pageContext":{"slug":"docs/getting-started/getting-started.html","previous":{"fields":{"redirect":null,"slug":"docs/support/submitting-an-issue.html","mainPage":false},"code":{"scope":"/Users/john/workspace2018_IGNITE/StarterIgnite/src/docs/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"redirect":null,"slug":"docs/index.html","mainPage":true},"code":{"scope":"/Users/john/workspace2018_IGNITE/StarterIgnite/src/docs/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}