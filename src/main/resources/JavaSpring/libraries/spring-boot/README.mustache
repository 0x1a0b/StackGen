{{^interfaceOnly}}# StackGen generated server

Spring Boot Server 


## Overview  
This server was generated by the [StackGen&trade;](https://docs.stackgen.io) project.  

By using StackGen&trade;, you can easily generate a REST API Service from a Swagger schema.  

This is an example of building a StackGen-enabled server in Java using the SpringBoot framework.

The underlying library integrating StackGen to SpringBoot is [springfox](https://github.com/springfox/springfox)  

Start your server as an simple java application  

You can view the api documentation in StackGen-ui by pointing to  
http://localhost:8080/  

Change default port value in application.properties{{/interfaceOnly}}{{#interfaceOnly}}
# StackGen generated API stub

Spring Framework stub


## Overview
This code was generated by the [StackGen&trade;](https://docs.stackgen.io) project.

This is an example of building API Service stub interfaces in Java using the Spring framework.

The stubs generated can be used in your existing Spring-MVC or Spring-Boot application to create controller endpoints
by adding ```@Controller``` classes that implement the interface. Eg:
```java
@Controller
public class PetController implements PetApi {
// implement all PetApi methods
}
```

You can also use the interface to create [Spring-Cloud Feign clients](http://projects.spring.io/spring-cloud/spring-cloud.html#spring-cloud-feign-inheritance).Eg:
```java
@FeignClient(name="pet", url="http://petstore.StackGen.io/v2")
public interface PetClient extends PetApi {

}
```
{{/interfaceOnly}}