{"data":{"mdx":{"excerpt":"Programming with StackGen Before diving into troubleshooting be sure to setup your environment Using StackGen Generated Data Objects in Javaâ€¦","timeToRead":1,"frontmatter":{"title":"Java StackGen Development","needsAuth":false},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Programming with StackGen`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Before diving into troubleshooting be sure to setup your environment`)), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Using StackGen Generated Data Objects in Java`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `One of the more useful areas of StackGen is the developer-friendly database persistence code that is generated and accessible directly from your Java code.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Extending the StackGen generated output directly is doable, but it is recommended to subclass the generated data model \"Service\" class in most cases.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The data model \"Service\" classes are predictably named \"xxxService\".`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `For example, if your Swagger input file contained a data model definition for \"User:\"`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"Swagger\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"swagger\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-swagger\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-swagger\"\n  }, \"...\", \"\\n\", \"User:\", \"\\n\", \"    \", \"required:\", \"\\n\", \"    \", \"- username\", \"\\n\", \"    \", \"- password\", \"\\n\", \"    \", \"properties:\", \"\\n\", \"      \", \"governmentId:\", \"\\n\", \"        \", \"description: a 10 digit government ID (encrypted)\", \"\\n\", \"        \", \"type: string\", \"\\n\", \"        \", \"example: 1112233334\", \"\\n\", \"        \", \"maxLength: 10\", \"\\n\", \"        \", \"minLength: 10\", \"\\n\", \"        \", \"x-starter-secureField: true\", \"\\n\", \"      \", \"userName:\", \"\\n\", \"        \", \"type: string\", \"\\n\", \"        \", \"example: Sparky\", \"\\n\", \"      \", \"password:\", \"\\n\", \"        \", \"type: string\", \"\\n\", \"        \", \"example: HardToGuess1980\", \"\\n\", \"        \", \"minLength: 10\", \"\\n\", \"...\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Then this Swagger definition will generate a StackGen project which contains the `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `\"UserService.java\"`), ` data model service class.`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"Java\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-java\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-java\"\n  }, \"package io.starter.stackgen.model;\", \"\\n\", \"...\", \"\\n\", \"/**\", \"\\n\", \" * Starter Ignite 'JavaGen' Generated Class:\", \"\\n\", \" * Apr/13/2019 10:40:29 -0700 */\", \"\\n\", \"@Service(\\\"userApiDelegate\\\")\", \"\\n\", \"public class UserService implements UserApiDelegate \", \"{\", \"\\n\", \"  \", \"public User UserBean = new User();\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This UserService class is intended to be the \"extension point\" for Java developers to access the data model and extend the functionality via server-side Java.`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `NOTE: the paths and package names are configurable, example code will refer to the default values`)), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"Java\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-java\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-java\"\n  }, \"// loading a User from the database is a few lines of code\", \"\\n\", \"UserService u = new UserService();\", \"\\n\", \"u.setId(100l); // load the user with ID \\\"100\\\"\", \"\\n\", \"u.load();\", \"\\n\", \"\\n\", \"ContactMethodService cmx = new ContactMethodService();\", \"\\n\", \"cmx.getSelectByExample().createCriteria().andOwnerIdEqualTo(100l);\", \"\\n\", \"cmx.load();\")))), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components,\n    props: {\n      \"start\": 2\n    }\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Create a zipfile (archive) of the following:`)), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `The OpenAPI/Swagger spec file (YAML/JSON) used to generate the Stack with the problem`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `A full database dump (ie: mysqldump) of the database SCHEMA ONLY (NOT DATA) created for the Stack (if any)`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `The `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"li\"\n  }, `/gen/target/xxxx-exec-x.x.x.jar`), ` generated for the Stack`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `The latest logfile(s) showing any stacktraces or error/warning messages related to the issue`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Screenshot(s) of the problem including UI -- please blur out sensitive information!`)));\n});"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"docs/programming-guide/next-steps.html","previous":{"fields":{"redirect":null,"slug":"docs/programming-guide/programming-guide.html","mainPage":false},"code":{"scope":"/Users/john/workspace2018_IGNITE/StarterIgnite/src/docs/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":false}}