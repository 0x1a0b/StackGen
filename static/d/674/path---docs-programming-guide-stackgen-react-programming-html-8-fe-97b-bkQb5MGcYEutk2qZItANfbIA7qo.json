{"data":{"mdx":{"excerpt":"Programming with StackGen Before diving into StackGen React development be sure to (/docs/getting-started/getting-started.html)[setup yourâ€¦","timeToRead":1,"frontmatter":{"title":"StackGen PRO React Development","needsAuth":false},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Programming with StackGen`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Before diving into StackGen React development be sure to (/docs/getting-started/getting-started.html)[setup your environment`)), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Modifying the StackGen Generated React User Interface`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The StackGen PRO React code generation is intended to save UI/UX developers time and effort by producing a large percentage of the \"boilerplate\" code required to connect a React app to the StackGen Microservices.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Similar to the React (server side) code generation, the React (client side) code generation maps directly to the Swagger definition that you are using to define the code.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The generated React code for a single domain object such as the \"User\" object consists of a number of React and Redux ReactScript source files.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `/src/actions`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `/src/components`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `/src/actions`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"Swagger\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"swagger\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-swagger\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-swagger\"\n  }, \"...\", \"\\n\", \"User:\", \"\\n\", \"    \", \"required:\", \"\\n\", \"    \", \"- username\", \"\\n\", \"    \", \"- password\", \"\\n\", \"    \", \"properties:\", \"\\n\", \"      \", \"governmentId:\", \"\\n\", \"        \", \"description: a 10 digit government ID (encrypted)\", \"\\n\", \"        \", \"type: string\", \"\\n\", \"        \", \"example: 1112233334\", \"\\n\", \"        \", \"maxLength: 10\", \"\\n\", \"        \", \"minLength: 10\", \"\\n\", \"        \", \"x-starter-secureField: true\", \"\\n\", \"      \", \"userName:\", \"\\n\", \"        \", \"type: string\", \"\\n\", \"        \", \"example: Sparky\", \"\\n\", \"      \", \"password:\", \"\\n\", \"        \", \"type: string\", \"\\n\", \"        \", \"example: HardToGuess1980\", \"\\n\", \"        \", \"minLength: 10\", \"\\n\", \"...\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Then this Swagger definition will generate a StackGen project which contains the `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `\"UserService.React\"`), ` data model service class.`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"React\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"react\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-react\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-react\"\n  }, \"package io.starter.stackgen.model;\", \"\\n\", \"...\", \"\\n\", \"/**\", \"\\n\", \" * Starter Ignite 'ReactGen' Generated Class:\", \"\\n\", \" * Apr/13/2019 10:40:29 -0700 */\", \"\\n\", \"@Service(\\\"userApiDelegate\\\")\", \"\\n\", \"public class UserService implements UserApiDelegate \", \"{\", \"\\n\", \"  \", \"public User UserBean = new User();\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This UserService class is intended to be the \"extension point\" for React developers to access the data model and extend the functionality via server-side React.`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `NOTE: the paths and package names are configurable, example code will refer to the default values`)), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"React\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"react\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-react\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-react\"\n  }, \"// loading a User from the database is a few lines of code\", \"\\n\", \"UserService u = new UserService();\", \"\\n\", \"u.setId(100l); // load the user with ID \\\"100\\\"\", \"\\n\", \"u.load();\", \"\\n\", \"\\n\", \"// you can also get a handle to the MyBatis \\\"Select by Example\\\"\", \"\\n\", \"// functionality to create advanced selection criteria\", \"\\n\", \"ContactMethodService cmx = new ContactMethodService();\", \"\\n\", \"cmx.getSelectByExample().createCriteria().andOwnerIdEqualTo(100l);\", \"\\n\", \"cmx.load();\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `At this point in the code, you can handle most data operations without touching a line of SQL or any direct JDBC calls.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Adding functionality and aggregating database operations are straightforward Plain Old React inheritance.`));\n});"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"docs/programming-guide/stackgen-react-programming.html","previous":{"fields":{"redirect":null,"slug":"docs/programming-guide/stackgen-java-programming.html","mainPage":false},"code":{"scope":"/Users/john/workspace2018_IGNITE/StarterIgnite/src/docs/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"redirect":"/docs/migration-from-electric/first-considerations/what-is.html","slug":"docs/support/index.html","mainPage":false},"code":{"scope":"/Users/john/workspace2018_IGNITE/StarterIgnite/src/docs/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}