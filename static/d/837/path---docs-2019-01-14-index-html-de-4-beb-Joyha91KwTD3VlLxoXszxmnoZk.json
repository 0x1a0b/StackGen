{"data":{"mdx":{"excerpt":"What are \"Domains\" One of the mandates of Starter Ignite is  Max Interop Max Interop : to enable and encourage interoperability with as manyâ€¦","timeToRead":1,"frontmatter":{"title":"Mastering API Domains and Achieving Max Interop","needsAuth":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `What are \"Domains\"`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `One of the mandates of Starter Ignite is `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Max Interop`)), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Max Interop`), `: to enable and encourage interoperability with as many external systems as possible.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Because of this requirement, Starter Ignite is designed for extensibility and enhancement in every practical way.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The following non-exhaustive list of ways  that you can extend Starter Ignite or integrate it into existing stacks:`), React.createElement(\"blockquote\", null), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Generate standalone Microservices to provide specific functionality for web and mobile apps`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Generate Java Data Objects and matching MySQL Database for a desktop or server based applications`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `PRO`), ` Generate and launch a cluster of inter-related Microservices as well as a Management Console to`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, `Build a custom React component that is bound to a generated REST endpoint and embed in existing applications`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `PRO`), ` Generate, deploy, and launch a complete full-stack ReactJS/React Native app with a clustered fault tolerant AWS Cloud Spring Boot backend, replicated, fault tolerant RDS/Aurora Database and encrypted SecureField encryption to protect customer private information`))), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Logic and Data Domains can be \"Merged\" into large APIs`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Domains`), ` in Starter Ignite terminology refers to the scope of a functional area or field. In the case of Plugins and extending the capabilities of your APIs with existing Schemas, Data Models, and Logic, a `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Domain`), ` means the Plugin and the area of concern that the Plugin provides functionality for.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `For example: the \"eCommerce\" domain includes all functionality related to purchasing items and services online, payments, shopping cart, customer self-service and logic for various workflows: request order refund, returns, downloads and unlocks, etc.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `So to build a full eCommerce app, you would need the plugin for the \"eCommerce\" domain, which would in turn install any missing required base plugins such as:`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `\"StarterIgnite\" : User and ACL, Groups, Preferences`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `\"StarterConnect\" : email, SMS and feeds/subs, GitHub`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `\"StarterSocialConnect\" : Facebook, Twitter, Slack, BitBucket (optional)`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `\"StarterWorkflows\" : Coming Soon (optional)`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Generated apps are built ready to deploy on all major cloud platforms, production servers, development and testing environments without modification.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `How to Develop Merged Specification APIs`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `TODO: writeup`)), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `How to Reconcile Collisions and Side Effects`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `TODO: writeup`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Regenerate Early, Regenerate Often`)));\n});"}}},"pageContext":{"slug":"docs/2019-01-14/index.html","previous":{"fields":{"redirect":null,"slug":"docs/2019-01-03/index.html","mainPage":false},"code":{"scope":"/Users/john/workspace2019/StackGen/gatsby-boilerplate/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"redirect":null,"slug":"docs/2017-03-23/index.html","mainPage":false},"code":{"scope":"/Users/john/workspace2019/StackGen/gatsby-boilerplate/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}